(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error("Cannot find module '"+o+"'")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
var Paddle, config, create, game, paddles, preload, update, updateBlue, updateOrange;

config = require("./config.coffee");

Paddle = require("./paddle.coffee");

paddles = [];

preload = function() {
  console.log(':preload');
  return game.load.image('paddle', 'assets/images/paddle.png');
};

create = function() {
  console.log(':create');
  game.stage.backgroundColor = config.backgroundColor;
  game.physics.startSystem(Phaser.Physics.ARCADE);
  paddles[config.colorCodes.blue] = new Paddle(game, config.colorCodes.blue);
  return paddles[config.colorCodes.orange] = new Paddle(game, config.colorCodes.orange);
};

update = function() {
  updateBlue;
  return updateOrange;
};

updateBlue = function() {
  return paddles[config.colorCodes.blue].update;
};

updateOrange = function() {
  return paddles[config.colorCodes.blue].update;
};

game = new Phaser.Game(config.screenWidth, config.screenHeight, Phaser.AUTO, '', {
  preload: preload,
  create: create,
  update: update
});


},{"./config.coffee":2,"./paddle.coffee":3}],2:[function(require,module,exports){
var config;

config = {
  backgroundColor: "#350f28",
  screenWidth: 1080,
  screenHeight: 600,
  spriteScale: 8,
  colorCodes: {
    blue: 0,
    orange: 1
  },
  paddleMargin: 40
};

module.exports = config;


},{}],3:[function(require,module,exports){
var Paddle, config;

config = require("./config.coffee");

Paddle = function(game, colorCode) {
  var x, y;
  this.colorCode = colorCode;
  x = 0;
  y = config.screenHeight / 2 - game.cache.getImage('paddle').height * config.spriteScale / 2;
  switch (colorCode) {
    case config.colorCodes.blue:
      x = config.paddleMargin;
      break;
    case config.colorCodes.orange:
      x = config.screenWidth - config.paddleMargin - game.cache.getImage('paddle').width * config.spriteScale;
  }
  this.sprite = game.add.sprite(x, y, 'paddle');
  this.sprite.scale.setTo(config.spriteScale, config.spriteScale);
  game.physics.arcade.enable(this.sprite);
  this.move = function(direction) {};
  this.update = function() {
    return this.sprite.body.velocity = new Phaser.Point(0, 0);
  };
  return this;
};

module.exports = Paddle;


},{"./config.coffee":2}]},{},[1])
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL25hdGhhbmllbC9nbm9Qb3J0YWwvbm9kZV9tb2R1bGVzL2d1bHAtYnJvd3NlcmlmeS9ub2RlX21vZHVsZXMvYnJvd3NlcmlmeS9ub2RlX21vZHVsZXMvYnJvd3Nlci1wYWNrL19wcmVsdWRlLmpzIiwiL2hvbWUvbmF0aGFuaWVsL2dub1BvcnRhbC9zY3JpcHRzL2NvZmZlZS9hcHAuY29mZmVlIiwiL2hvbWUvbmF0aGFuaWVsL2dub1BvcnRhbC9zY3JpcHRzL2NvZmZlZS9jb25maWcuY29mZmVlIiwiL2hvbWUvbmF0aGFuaWVsL2dub1BvcnRhbC9zY3JpcHRzL2NvZmZlZS9wYWRkbGUuY29mZmVlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FDQUEsSUFBQSxnRkFBQTs7QUFBQSxNQUFBLEdBQVMsT0FBQSxDQUFRLGlCQUFSLENBQVQsQ0FBQTs7QUFBQSxNQUNBLEdBQVMsT0FBQSxDQUFRLGlCQUFSLENBRFQsQ0FBQTs7QUFBQSxPQUdBLEdBQVUsRUFIVixDQUFBOztBQUFBLE9BS0EsR0FBVSxTQUFBLEdBQUE7QUFDUixFQUFBLE9BQU8sQ0FBQyxHQUFSLENBQVksVUFBWixDQUFBLENBQUE7U0FFQSxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQVYsQ0FBZ0IsUUFBaEIsRUFBMEIsMEJBQTFCLEVBSFE7QUFBQSxDQUxWLENBQUE7O0FBQUEsTUFVQSxHQUFTLFNBQUEsR0FBQTtBQUNQLEVBQUEsT0FBTyxDQUFDLEdBQVIsQ0FBWSxTQUFaLENBQUEsQ0FBQTtBQUFBLEVBRUEsSUFBSSxDQUFDLEtBQUssQ0FBQyxlQUFYLEdBQTZCLE1BQU0sQ0FBQyxlQUZwQyxDQUFBO0FBQUEsRUFJQSxJQUFJLENBQUMsT0FBTyxDQUFDLFdBQWIsQ0FBeUIsTUFBTSxDQUFDLE9BQU8sQ0FBQyxNQUF4QyxDQUpBLENBQUE7QUFBQSxFQU1BLE9BQVEsQ0FBQSxNQUFNLENBQUMsVUFBVSxDQUFDLElBQWxCLENBQVIsR0FBc0MsSUFBQSxNQUFBLENBQU8sSUFBUCxFQUFhLE1BQU0sQ0FBQyxVQUFVLENBQUMsSUFBL0IsQ0FOdEMsQ0FBQTtTQU9BLE9BQVEsQ0FBQSxNQUFNLENBQUMsVUFBVSxDQUFDLE1BQWxCLENBQVIsR0FBd0MsSUFBQSxNQUFBLENBQU8sSUFBUCxFQUFhLE1BQU0sQ0FBQyxVQUFVLENBQUMsTUFBL0IsRUFSakM7QUFBQSxDQVZULENBQUE7O0FBQUEsTUFvQkEsR0FBUyxTQUFBLEdBQUE7QUFDUCxFQUFBLFVBQUEsQ0FBQTtTQUNBLGFBRk87QUFBQSxDQXBCVCxDQUFBOztBQUFBLFVBd0JBLEdBQWEsU0FBQSxHQUFBO1NBQ1gsT0FBUSxDQUFBLE1BQU0sQ0FBQyxVQUFVLENBQUMsSUFBbEIsQ0FBdUIsQ0FBQyxPQURyQjtBQUFBLENBeEJiLENBQUE7O0FBQUEsWUE2QkEsR0FBZSxTQUFBLEdBQUE7U0FDYixPQUFRLENBQUEsTUFBTSxDQUFDLFVBQVUsQ0FBQyxJQUFsQixDQUF1QixDQUFDLE9BRG5CO0FBQUEsQ0E3QmYsQ0FBQTs7QUFBQSxJQWtDQSxHQUFXLElBQUEsTUFBTSxDQUFDLElBQVAsQ0FBWSxNQUFNLENBQUMsV0FBbkIsRUFBZ0MsTUFBTSxDQUFDLFlBQXZDLEVBQXFELE1BQU0sQ0FBQyxJQUE1RCxFQUFrRSxFQUFsRSxFQUFzRTtBQUFBLEVBQUEsT0FBQSxFQUFTLE9BQVQ7QUFBQSxFQUFrQixNQUFBLEVBQVEsTUFBMUI7QUFBQSxFQUFrQyxNQUFBLEVBQVEsTUFBMUM7Q0FBdEUsQ0FsQ1gsQ0FBQTs7OztBQ0FBLElBQUEsTUFBQTs7QUFBQSxNQUFBLEdBQVM7QUFBQSxFQUNQLGVBQUEsRUFBaUIsU0FEVjtBQUFBLEVBR1AsV0FBQSxFQUFhLElBSE47QUFBQSxFQUlQLFlBQUEsRUFBYyxHQUpQO0FBQUEsRUFNUCxXQUFBLEVBQWEsQ0FOTjtBQUFBLEVBUVAsVUFBQSxFQUFZO0FBQUEsSUFDVixJQUFBLEVBQU0sQ0FESTtBQUFBLElBRVYsTUFBQSxFQUFRLENBRkU7R0FSTDtBQUFBLEVBYVAsWUFBQSxFQUFjLEVBYlA7Q0FBVCxDQUFBOztBQUFBLE1BZ0JNLENBQUMsT0FBUCxHQUFpQixNQWhCakIsQ0FBQTs7OztBQ0FBLElBQUEsY0FBQTs7QUFBQSxNQUFBLEdBQVMsT0FBQSxDQUFRLGlCQUFSLENBQVQsQ0FBQTs7QUFBQSxNQUVBLEdBQVMsU0FBQyxJQUFELEVBQU8sU0FBUCxHQUFBO0FBQ1AsTUFBQSxJQUFBO0FBQUEsRUFBQSxJQUFJLENBQUMsU0FBTCxHQUFpQixTQUFqQixDQUFBO0FBQUEsRUFFQSxDQUFBLEdBQUksQ0FGSixDQUFBO0FBQUEsRUFHQSxDQUFBLEdBQUksTUFBTSxDQUFDLFlBQVAsR0FBc0IsQ0FBdEIsR0FBMEIsSUFBSSxDQUFDLEtBQUssQ0FBQyxRQUFYLENBQW9CLFFBQXBCLENBQTZCLENBQUMsTUFBOUIsR0FBdUMsTUFBTSxDQUFDLFdBQTlDLEdBQTRELENBSDFGLENBQUE7QUFLQSxVQUFRLFNBQVI7QUFBQSxTQUNPLE1BQU0sQ0FBQyxVQUFVLENBQUMsSUFEekI7QUFFSSxNQUFBLENBQUEsR0FBSSxNQUFNLENBQUMsWUFBWCxDQUZKO0FBQ087QUFEUCxTQUdPLE1BQU0sQ0FBQyxVQUFVLENBQUMsTUFIekI7QUFJSSxNQUFBLENBQUEsR0FBSSxNQUFNLENBQUMsV0FBUCxHQUFxQixNQUFNLENBQUMsWUFBNUIsR0FBMkMsSUFBSSxDQUFDLEtBQUssQ0FBQyxRQUFYLENBQW9CLFFBQXBCLENBQTZCLENBQUMsS0FBOUIsR0FBc0MsTUFBTSxDQUFDLFdBQTVGLENBSko7QUFBQSxHQUxBO0FBQUEsRUFXQSxJQUFJLENBQUMsTUFBTCxHQUFjLElBQUksQ0FBQyxHQUFHLENBQUMsTUFBVCxDQUFnQixDQUFoQixFQUFtQixDQUFuQixFQUFzQixRQUF0QixDQVhkLENBQUE7QUFBQSxFQVlBLElBQUksQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLEtBQWxCLENBQXdCLE1BQU0sQ0FBQyxXQUEvQixFQUE0QyxNQUFNLENBQUMsV0FBbkQsQ0FaQSxDQUFBO0FBQUEsRUFjQSxJQUFJLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxNQUFwQixDQUEyQixJQUFJLENBQUMsTUFBaEMsQ0FkQSxDQUFBO0FBQUEsRUFnQkEsSUFBSSxDQUFDLElBQUwsR0FBWSxTQUFDLFNBQUQsR0FBQSxDQWhCWixDQUFBO0FBQUEsRUFrQkEsSUFBSSxDQUFDLE1BQUwsR0FBYyxTQUFBLEdBQUE7V0FDWixJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxRQUFqQixHQUFnQyxJQUFBLE1BQU0sQ0FBQyxLQUFQLENBQWEsQ0FBYixFQUFnQixDQUFoQixFQURwQjtFQUFBLENBbEJkLENBQUE7QUFxQkEsU0FBTyxJQUFQLENBdEJPO0FBQUEsQ0FGVCxDQUFBOztBQUFBLE1BMEJNLENBQUMsT0FBUCxHQUFpQixNQTFCakIsQ0FBQSIsImZpbGUiOiJnZW5lcmF0ZWQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uIGUodCxuLHIpe2Z1bmN0aW9uIHMobyx1KXtpZighbltvXSl7aWYoIXRbb10pe3ZhciBhPXR5cGVvZiByZXF1aXJlPT1cImZ1bmN0aW9uXCImJnJlcXVpcmU7aWYoIXUmJmEpcmV0dXJuIGEobywhMCk7aWYoaSlyZXR1cm4gaShvLCEwKTt0aHJvdyBuZXcgRXJyb3IoXCJDYW5ub3QgZmluZCBtb2R1bGUgJ1wiK28rXCInXCIpfXZhciBmPW5bb109e2V4cG9ydHM6e319O3Rbb11bMF0uY2FsbChmLmV4cG9ydHMsZnVuY3Rpb24oZSl7dmFyIG49dFtvXVsxXVtlXTtyZXR1cm4gcyhuP246ZSl9LGYsZi5leHBvcnRzLGUsdCxuLHIpfXJldHVybiBuW29dLmV4cG9ydHN9dmFyIGk9dHlwZW9mIHJlcXVpcmU9PVwiZnVuY3Rpb25cIiYmcmVxdWlyZTtmb3IodmFyIG89MDtvPHIubGVuZ3RoO28rKylzKHJbb10pO3JldHVybiBzfSkiLCJjb25maWcgPSByZXF1aXJlIFwiLi9jb25maWcuY29mZmVlXCJcblBhZGRsZSA9IHJlcXVpcmUgXCIuL3BhZGRsZS5jb2ZmZWVcIlxuXG5wYWRkbGVzID0gWyBdXG5cbnByZWxvYWQgPSAtPlxuICBjb25zb2xlLmxvZyAnOnByZWxvYWQnXG5cbiAgZ2FtZS5sb2FkLmltYWdlKCdwYWRkbGUnLCAnYXNzZXRzL2ltYWdlcy9wYWRkbGUucG5nJylcblxuY3JlYXRlID0gLT5cbiAgY29uc29sZS5sb2cgJzpjcmVhdGUnXG5cbiAgZ2FtZS5zdGFnZS5iYWNrZ3JvdW5kQ29sb3IgPSBjb25maWcuYmFja2dyb3VuZENvbG9yXG5cbiAgZ2FtZS5waHlzaWNzLnN0YXJ0U3lzdGVtKFBoYXNlci5QaHlzaWNzLkFSQ0FERSlcblxuICBwYWRkbGVzW2NvbmZpZy5jb2xvckNvZGVzLmJsdWVdID0gbmV3IFBhZGRsZShnYW1lLCBjb25maWcuY29sb3JDb2Rlcy5ibHVlKVxuICBwYWRkbGVzW2NvbmZpZy5jb2xvckNvZGVzLm9yYW5nZV0gPSBuZXcgUGFkZGxlKGdhbWUsIGNvbmZpZy5jb2xvckNvZGVzLm9yYW5nZSlcblxudXBkYXRlID0gLT5cbiAgdXBkYXRlQmx1ZVxuICB1cGRhdGVPcmFuZ2VcblxudXBkYXRlQmx1ZSA9IC0+XG4gIHBhZGRsZXNbY29uZmlnLmNvbG9yQ29kZXMuYmx1ZV0udXBkYXRlXG5cbiAgIyBUT0RPIGhhbmRsZSBpbnB1dFxuXG51cGRhdGVPcmFuZ2UgPSAtPlxuICBwYWRkbGVzW2NvbmZpZy5jb2xvckNvZGVzLmJsdWVdLnVwZGF0ZVxuXG4gICMgVE9ETyBydW4gQUkgZGVjaXNpb25zXG5cbmdhbWUgPSBuZXcgUGhhc2VyLkdhbWUgY29uZmlnLnNjcmVlbldpZHRoLCBjb25maWcuc2NyZWVuSGVpZ2h0LCBQaGFzZXIuQVVUTywgJycsIHByZWxvYWQ6IHByZWxvYWQsIGNyZWF0ZTogY3JlYXRlLCB1cGRhdGU6IHVwZGF0ZVxuIiwiY29uZmlnID0ge1xuICBiYWNrZ3JvdW5kQ29sb3I6IFwiIzM1MGYyOFwiLFxuXG4gIHNjcmVlbldpZHRoOiAxMDgwLFxuICBzY3JlZW5IZWlnaHQ6IDYwMCxcblxuICBzcHJpdGVTY2FsZTogOCxcblxuICBjb2xvckNvZGVzOiB7XG4gICAgYmx1ZTogMFxuICAgIG9yYW5nZTogMVxuICB9LFxuXG4gIHBhZGRsZU1hcmdpbjogNDBcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBjb25maWdcbiIsImNvbmZpZyA9IHJlcXVpcmUgXCIuL2NvbmZpZy5jb2ZmZWVcIlxuXG5QYWRkbGUgPSAoZ2FtZSwgY29sb3JDb2RlKSAtPlxuICB0aGlzLmNvbG9yQ29kZSA9IGNvbG9yQ29kZVxuXG4gIHggPSAwXG4gIHkgPSBjb25maWcuc2NyZWVuSGVpZ2h0IC8gMiAtIGdhbWUuY2FjaGUuZ2V0SW1hZ2UoJ3BhZGRsZScpLmhlaWdodCAqIGNvbmZpZy5zcHJpdGVTY2FsZSAvIDJcblxuICBzd2l0Y2ggKGNvbG9yQ29kZSlcbiAgICB3aGVuIGNvbmZpZy5jb2xvckNvZGVzLmJsdWVcbiAgICAgIHggPSBjb25maWcucGFkZGxlTWFyZ2luXG4gICAgd2hlbiBjb25maWcuY29sb3JDb2Rlcy5vcmFuZ2VcbiAgICAgIHggPSBjb25maWcuc2NyZWVuV2lkdGggLSBjb25maWcucGFkZGxlTWFyZ2luIC0gZ2FtZS5jYWNoZS5nZXRJbWFnZSgncGFkZGxlJykud2lkdGggKiBjb25maWcuc3ByaXRlU2NhbGVcblxuICB0aGlzLnNwcml0ZSA9IGdhbWUuYWRkLnNwcml0ZSh4LCB5LCAncGFkZGxlJylcbiAgdGhpcy5zcHJpdGUuc2NhbGUuc2V0VG8oY29uZmlnLnNwcml0ZVNjYWxlLCBjb25maWcuc3ByaXRlU2NhbGUpXG5cbiAgZ2FtZS5waHlzaWNzLmFyY2FkZS5lbmFibGUodGhpcy5zcHJpdGUpICMgZ2l2ZSBtZSBhIGJvZHkhXG5cbiAgdGhpcy5tb3ZlID0gKGRpcmVjdGlvbikgLT5cblxuICB0aGlzLnVwZGF0ZSA9IC0+XG4gICAgdGhpcy5zcHJpdGUuYm9keS52ZWxvY2l0eSA9IG5ldyBQaGFzZXIuUG9pbnQoMCwgMCk7ICMgZG9uJ3QgbW92ZSBieSBkZWZhdWx0XG5cbiAgcmV0dXJuIHRoaXNcblxubW9kdWxlLmV4cG9ydHMgPSBQYWRkbGVcbiJdfQ==
